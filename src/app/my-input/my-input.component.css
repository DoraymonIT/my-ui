.container {
  padding-top: 50px;
}
input {
  outline: none;
}
.my-input {
  border: 2px solid #495057;
  color: #495057;
  font-weight: 800;
  border-radius: 20px;
  padding-left: 15px;
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
.my-input1 {
  border: 2px solid #495057;
  font-weight: 800;
  color: #495057;
  padding-left: 15px;
  border-radius: unset;
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  border-radius: 4px;
}
.my-input-xl {
  padding: 5px 5px 5px 15px;
}
.my-input:focus,
.my-input1:focus,
.my-select:focus {
  color: #495057;
  background-color: #fff;
  border-color: #272727;
  outline: 0;
  box-shadow: 0 0 0 3px rgb(187 187 187 / 50%);
}
.my-select {
  width: 100%;
  outline: none;
  padding: 10px;
  font-weight: 800;
  border-radius: 10px;
  color: #495057;
  border: 2px solid #495057;
}
.my-date {
  width: 100%;
  text-align: center;
  padding: 10px;
  font-weight: 800;
  border-radius: 10px;
  color: #495057;
  border: 2px solid #495057;
}
/*
=====
CORE STYLES
=====
*/

.toggle {
  --uiToggleSize: var(--toggleSize, 1.25rem);
  --uiToggleBorderWidth: var(--toggleBorderWidth, 2px);
  --uiToggleColor: var(--toggleColor, #222);

  display: var(--toggleDisplay, inline-flex);
  position: relative;
}

.toggle__input {
  /*
  The pattern by Sara Soueidan https://www.sarasoueidan.com/blog/inclusively-hiding-and-styling-checkboxes-and-radio-buttons/
  */
  width: var(--uiToggleSize);
  height: var(--uiToggleSize);
  opacity: 0;

  position: absolute;
  top: 0;
  left: 0;
  margin: 0;
}

/*
1. Calculation of the gap for the custom checkbox
*/

.toggle__label {
  display: inline-flex;
  min-height: var(--uiToggleSize);
  padding-left: calc(var(--uiToggleSize) + var(--toggleIndent, 0.4em));
}

.toggle__input:not(:disabled) ~ .toggle__label {
  cursor: pointer;
}

/*
1. Ems helps to calculate size of the checkbox
*/

.toggle__label::after {
  content: "";
  box-sizing: border-box;
  width: 1em;
  height: 1em;
  font-size: var(--uiToggleSize); /* 1 */

  background-color: transparent;
  border: var(--uiToggleBorderWidth) solid var(--uiToggleColor);

  position: absolute;
  left: 0;
  top: 0;
  z-index: 2;
}

.toggle__input:checked ~ .toggle__label::after {
  background-color: var(--uiToggleColor);
}

.toggle__text {
  margin-top: auto;
  margin-bottom: auto;
}

.toggle__label::before {
  content: "";
  width: 0;
  height: 0;
  font-size: var(--uiToggleSize); /* 1 */

  border-left-width: 0;
  border-bottom-width: 0;
  border-left-style: solid;
  border-bottom-style: solid;
  border-color: var(--toggleArrowColor, #fff);

  position: absolute;
  top: 0.5428em;
  left: 0.25em;
  z-index: 3;

  transform-origin: left top;
  transform: rotate(-40deg) skew(10deg);
}

.toggle__input:checked ~ .toggle__label::before {
  --uiToggleArrowWidth: var(--toggleArrowWidth, 2px);

  width: 0.4em;
  height: 0.2em;
  border-left-width: var(--uiToggleArrowWidth);
  border-bottom-width: var(--uiToggleArrowWidth);
}

.toggle__label::after {
  border-radius: var(--toggleBorderRadius, 2px);
}

.toggle__input:not(:disabled) ~ .toggle__label::before {
  will-change: width, height;
  opacity: 0;
}

.toggle__input:not(:disabled):checked ~ .toggle__label::before {
  opacity: 1;
  transition: opacity 0.1s ease-out 0.25s, width 0.1s ease-out 0.5s,
    height 0.2s ease-out 0.3s;
}

.toggle__input:not(:disabled) ~ .toggle__label::after {
  will-change: background-color;
  transition: background-color 0.1s ease-out;
}

.page__toggle {
  margin-top: 1.25rem;
  margin-right: 1.5rem;
  font-size: var(--pageToggleTextFontSize);
}
